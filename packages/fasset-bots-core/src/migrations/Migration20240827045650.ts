import { Migration } from '@mikro-orm/migrations';

export class Migration20240827045650 extends Migration {

  async up(): Promise<void> {
    this.addSql('create table `agent` (`vault_address` varchar(42) not null, `collateral_pool_address` varchar(42) not null, `asset_manager` varchar(42) null, `chain_id` varchar(255) not null, `fasset_symbol` varchar(255) not null, `owner_address` varchar(255) not null, `underlying_address` varchar(255) not null, `active` tinyint(1) not null, `current_event_block` int null, `waiting_for_destruction_clean_up` tinyint(1) not null default false, `waiting_for_destruction_timestamp` decimal(38, 0) not null default 0, `destroy_pool_token_redemption_withdrawal_allowed_at_timestamp` decimal(38, 0) not null default 0, `destroy_pool_token_redemption_withdrawal_allowed_at_amount` varchar(255) not null default \'\', `destroy_vault_collateral_withdrawal_allowed_at_timestamp` decimal(38, 0) not null default 0, `destroy_vault_collateral_withdrawal_allowed_at_amount` varchar(255) not null default \'\', `waiting_to_empty_underlying_address_tx_id` int null, `exit_available_allowed_at_timestamp` decimal(38, 0) not null default 0, `pool_token_redemption_withdrawal_allowed_at_timestamp` decimal(38, 0) not null default 0, `pool_token_redemption_withdrawal_allowed_at_amount` varchar(255) not null default \'\', `withdrawal_allowed_at_timestamp` decimal(38, 0) not null default 0, `withdrawal_allowed_at_amount` varchar(255) not null default \'\', `underlying_withdrawal_announced_at_timestamp` decimal(38, 0) not null default 0, `underlying_withdrawal_confirm_transaction` varchar(255) not null default \'\', `underlying_withdrawal_waiting_for_cancelation` tinyint(1) not null default false, `daily_tasks_timestamp` decimal(38, 0) not null default 0, `daily_proof_state` varchar(20) not null default \'obtainedProof\', `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP, primary key (`vault_address`)) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `agent` add index `agent_asset_manager_index`(`asset_manager`);');

    this.addSql('create table `agent_minting` (`id` int unsigned not null auto_increment primary key, `state` varchar(255) not null, `agent_address` varchar(42) not null, `agent_underlying_address` varchar(42) not null, `request_id` decimal(38, 0) not null, `value_uba` decimal(38, 0) not null, `fee_uba` decimal(38, 0) not null, `first_underlying_block` decimal(38, 0) not null, `last_underlying_block` decimal(38, 0) not null, `last_underlying_timestamp` decimal(38, 0) not null, `payment_reference` varchar(66) not null, `proof_request_round` int null, `proof_request_data` text null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `agent_minting` add unique `agent_minting_agent_address_request_id_unique`(`agent_address`, `request_id`);');

    this.addSql('create table `agent_redemption` (`id` int unsigned not null auto_increment primary key, `state` varchar(255) not null, `agent_address` varchar(42) not null, `request_id` decimal(38, 0) not null, `payment_address` varchar(66) not null, `value_uba` decimal(38, 0) not null, `fee_uba` decimal(38, 0) not null, `last_underlying_block` decimal(38, 0) not null, `last_underlying_timestamp` decimal(38, 0) not null, `payment_reference` varchar(66) not null, `tx_db_id` int null, `tx_hash` varchar(255) null, `proof_request_round` int null, `proof_request_data` text null, `defaulted` tinyint(1) null, `final_state` varchar(255) null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `agent_redemption` add unique `agent_redemption_agent_address_request_id_unique`(`agent_address`, `request_id`);');

    this.addSql('create table `agent_underlying_payment` (`id` int unsigned not null auto_increment primary key, `state` varchar(255) not null, `type` varchar(255) not null, `agent_address` varchar(42) not null, `tx_db_id` int null, `tx_hash` varchar(255) null, `proof_request_round` int null, `proof_request_data` text null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `agent_underlying_payment` add unique `agent_underlying_payment_tx_hash_unique`(`tx_hash`);');

    this.addSql('create table `agent_update_setting` (`id` int unsigned not null auto_increment primary key, `state` varchar(255) not null, `name` varchar(255) not null, `agentAddress` varchar(42) not null, `valid_at` decimal(38, 0) not null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `agent_update_setting` add index `agent_update_setting_agentAddress_index`(`agentAddress`);');

    this.addSql('create table `event` (`id` int unsigned not null auto_increment primary key, `block_number` int not null, `transaction_index` int not null, `log_index` int not null, `handled` tinyint(1) not null, `retries` int not null, `agent_vault_address` varchar(42) not null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `event` add index `event_agent_vault_address_index`(`agent_vault_address`);');

    this.addSql('create table `monitoring` (`id` int unsigned not null auto_increment primary key, `chain_type` varchar(255) not null, `last_ping_in_timestamp` decimal(38, 0) not null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP) default character set utf8mb4 engine = InnoDB;');

    this.addSql('create table `transaction` (`id` int unsigned not null auto_increment primary key, `chain_type` varchar(255) not null, `source` varchar(255) not null, `destination` varchar(255) not null, `transaction_hash` varchar(255) null, `status` varchar(255) not null, `fee` decimal(38, 0) null, `max_fee` decimal(38, 0) null, `submitted_in_block` int not null default 0, `submitted_in_timestamp` datetime null, `accepted_to_mempool_in_timestamp` datetime null, `reached_final_status_in_timestamp` datetime null, `reached_status_prepared_in_timestamp` datetime null, `reached_status_pending_in_timestamp` datetime null, `execute_until_block` int null, `execute_until_timestamp` datetime null, `confirmations` int null, `reference` varchar(255) null, `amount` decimal(38, 0) null, `raw` blob null, `server_submit_response` blob null, `replaced_by_id` int unsigned null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `transaction` add unique `transaction_replaced_by_id_unique`(`replaced_by_id`);');

    this.addSql('create table `transaction_output` (`id` int unsigned not null auto_increment primary key, `transaction_hash` varchar(255) not null, `vout` int null, `amount` decimal(38, 0) not null, `script` varchar(255) not null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP, `transaction_id` int unsigned not null) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `transaction_output` add index `transaction_output_transaction_id_index`(`transaction_id`);');

    this.addSql('create table `utxo` (`id` int unsigned not null auto_increment primary key, `source` varchar(255) not null, `mint_transaction_hash` varchar(255) not null, `spent_transaction_hash` varchar(255) null, `position` int not null, `spent_height` int not null, `value` decimal(38, 0) not null, `script` varchar(255) null, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP) default character set utf8mb4 engine = InnoDB;');
    this.addSql('alter table `utxo` add index `source_index`(`source`);');
    this.addSql('alter table `utxo` add index `mint_transaction_hash_index`(`mint_transaction_hash`);');
    this.addSql('alter table `utxo` add index `mint_transaction_hash_position_index`(`position`);');
    this.addSql('alter table `utxo` add index `source_spent_height_index`(`spent_height`);');

    this.addSql('create table `wallet_address_entity` (`address` varchar(255) not null, `encrypted_private_key` varchar(255) not null, `is_deleting` tinyint(1) not null default false, `created_at` datetime not null default CURRENT_TIMESTAMP, `updated_at` datetime not null default CURRENT_TIMESTAMP, primary key (`address`)) default character set utf8mb4 engine = InnoDB;');

    this.addSql('alter table `agent_update_setting` add constraint `agent_update_setting_agentAddress_foreign` foreign key (`agentAddress`) references `agent` (`vault_address`) on update cascade on delete CASCADE;');

    this.addSql('alter table `event` add constraint `event_agent_vault_address_foreign` foreign key (`agent_vault_address`) references `agent` (`vault_address`) on update cascade;');

    this.addSql('alter table `transaction` add constraint `transaction_replaced_by_id_foreign` foreign key (`replaced_by_id`) references `transaction` (`id`) on update cascade on delete set null;');

    this.addSql('alter table `transaction_output` add constraint `transaction_output_transaction_id_foreign` foreign key (`transaction_id`) references `transaction` (`id`) on update cascade;');
  }

}
