/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Truffle } from "./types";

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface EIP712Contract extends Truffle.Contract<EIP712Instance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<EIP712Instance>;
}

export interface EIP712DomainChanged {
  name: "EIP712DomainChanged";
  args: {};
}

export type AllEvents = EIP712DomainChanged;

export interface EIP712Instance extends Truffle.ContractInstance {
  eip712Domain(
    txDetails?: Truffle.TransactionDetails
  ): Promise<{
    0: string;
    1: string;
    2: string;
    3: BN;
    4: string;
    5: string;
    6: BN[];
  }>;

  methods: {
    eip712Domain(
      txDetails?: Truffle.TransactionDetails
    ): Promise<{
      0: string;
      1: string;
      2: string;
      3: BN;
      4: string;
      5: string;
      6: BN[];
    }>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
