/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Truffle } from "./types";

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface AssetManagerControllerContract
  extends Truffle.Contract<AssetManagerControllerInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<AssetManagerControllerInstance>;
}

export interface AdminChanged {
  name: "AdminChanged";
  args: {
    previousAdmin: string;
    newAdmin: string;
    0: string;
    1: string;
  };
}

export interface BeaconUpgraded {
  name: "BeaconUpgraded";
  args: {
    beacon: string;
    0: string;
  };
}

export interface GovernanceCallTimelocked {
  name: "GovernanceCallTimelocked";
  args: {
    encodedCall: string;
    encodedCallHash: string;
    allowedAfterTimestamp: BN;
    0: string;
    1: string;
    2: BN;
  };
}

export interface GovernanceInitialised {
  name: "GovernanceInitialised";
  args: {
    initialGovernance: string;
    0: string;
  };
}

export interface GovernedProductionModeEntered {
  name: "GovernedProductionModeEntered";
  args: {
    governanceSettings: string;
    0: string;
  };
}

export interface TimelockedGovernanceCallCanceled {
  name: "TimelockedGovernanceCallCanceled";
  args: {
    encodedCallHash: string;
    0: string;
  };
}

export interface TimelockedGovernanceCallExecuted {
  name: "TimelockedGovernanceCallExecuted";
  args: {
    encodedCallHash: string;
    0: string;
  };
}

export interface Upgraded {
  name: "Upgraded";
  args: {
    implementation: string;
    0: string;
  };
}

export type AllEvents =
  | AdminChanged
  | BeaconUpgraded
  | GovernanceCallTimelocked
  | GovernanceInitialised
  | GovernedProductionModeEntered
  | TimelockedGovernanceCallCanceled
  | TimelockedGovernanceCallExecuted
  | Upgraded;

export interface AssetManagerControllerInstance
  extends Truffle.ContractInstance {
  addAssetManager: {
    (_assetManager: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _assetManager: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManager: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManager: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  addCollateralType: {
    (
      _assetManagers: string[],
      _data: {
        collateralClass: number | BN | string;
        token: string;
        decimals: number | BN | string;
        validUntil: number | BN | string;
        directPricePair: boolean;
        assetFtsoSymbol: string;
        tokenFtsoSymbol: string;
        minCollateralRatioBIPS: number | BN | string;
        ccbMinCollateralRatioBIPS: number | BN | string;
        safetyMinCollateralRatioBIPS: number | BN | string;
      },
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _data: {
        collateralClass: number | BN | string;
        token: string;
        decimals: number | BN | string;
        validUntil: number | BN | string;
        directPricePair: boolean;
        assetFtsoSymbol: string;
        tokenFtsoSymbol: string;
        minCollateralRatioBIPS: number | BN | string;
        ccbMinCollateralRatioBIPS: number | BN | string;
        safetyMinCollateralRatioBIPS: number | BN | string;
      },
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _data: {
        collateralClass: number | BN | string;
        token: string;
        decimals: number | BN | string;
        validUntil: number | BN | string;
        directPricePair: boolean;
        assetFtsoSymbol: string;
        tokenFtsoSymbol: string;
        minCollateralRatioBIPS: number | BN | string;
        ccbMinCollateralRatioBIPS: number | BN | string;
        safetyMinCollateralRatioBIPS: number | BN | string;
      },
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _data: {
        collateralClass: number | BN | string;
        token: string;
        decimals: number | BN | string;
        validUntil: number | BN | string;
        directPricePair: boolean;
        assetFtsoSymbol: string;
        tokenFtsoSymbol: string;
        minCollateralRatioBIPS: number | BN | string;
        ccbMinCollateralRatioBIPS: number | BN | string;
        safetyMinCollateralRatioBIPS: number | BN | string;
      },
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  addEmergencyPauseSender: {
    (_address: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _address: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _address: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _address: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  assetManagerExists(
    _assetManager: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  cancelGovernanceCall: {
    (_encodedCall: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _encodedCall: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _encodedCall: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _encodedCall: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  deprecateCollateralType: {
    (
      _assetManagers: string[],
      _class: number | BN | string,
      _token: string,
      _invalidationTimeSec: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _class: number | BN | string,
      _token: string,
      _invalidationTimeSec: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _class: number | BN | string,
      _token: string,
      _invalidationTimeSec: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _class: number | BN | string,
      _token: string,
      _invalidationTimeSec: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  emergencyPause: {
    (
      _assetManagers: string[],
      _duration: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _duration: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _duration: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _duration: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  emergencyPauseTransfers: {
    (
      _assetManagers: string[],
      _duration: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _duration: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _duration: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _duration: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  executeGovernanceCall: {
    (_encodedCall: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _encodedCall: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _encodedCall: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _encodedCall: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  getAddressUpdater(txDetails?: Truffle.TransactionDetails): Promise<string>;

  getAssetManagers(txDetails?: Truffle.TransactionDetails): Promise<string[]>;

  governance(txDetails?: Truffle.TransactionDetails): Promise<string>;

  governanceSettings(txDetails?: Truffle.TransactionDetails): Promise<string>;

  initialize: {
    (
      _governanceSettings: string,
      _initialGovernance: string,
      _addressUpdater: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _governanceSettings: string,
      _initialGovernance: string,
      _addressUpdater: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _governanceSettings: string,
      _initialGovernance: string,
      _addressUpdater: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _governanceSettings: string,
      _initialGovernance: string,
      _addressUpdater: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  isExecutor(
    _address: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  pauseMinting: {
    (_assetManagers: string[], txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  productionMode(txDetails?: Truffle.TransactionDetails): Promise<boolean>;

  proxiableUUID(txDetails?: Truffle.TransactionDetails): Promise<string>;

  removeAssetManager: {
    (_assetManager: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _assetManager: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManager: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManager: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  removeEmergencyPauseSender: {
    (_address: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _address: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _address: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _address: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  replacedBy(txDetails?: Truffle.TransactionDetails): Promise<string>;

  resetEmergencyPauseTotalDuration: {
    (_assetManagers: string[], txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAgentExitAvailableTimelockSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAgentFeeChangeTimelockSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAgentMintingCRChangeTimelockSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAgentOwnerRegistry: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAgentTimelockedOperationWindowSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAgentVaultFactory: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAnnouncedUnderlyingConfirmationMinSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAttestationWindowSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setAverageBlockTimeMS: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCancelCollateralReservationAfterSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCcbTimeSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCleanerContract: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCleanupBlockNumberManager: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCollateralPoolFactory: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCollateralPoolTokenFactory: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCollateralPoolTokenTimelockSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCollateralRatiosForToken: {
    (
      _assetManagers: string[],
      _class: number | BN | string,
      _token: string,
      _minCollateralRatioBIPS: number | BN | string,
      _ccbMinCollateralRatioBIPS: number | BN | string,
      _safetyMinCollateralRatioBIPS: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _class: number | BN | string,
      _token: string,
      _minCollateralRatioBIPS: number | BN | string,
      _ccbMinCollateralRatioBIPS: number | BN | string,
      _safetyMinCollateralRatioBIPS: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _class: number | BN | string,
      _token: string,
      _minCollateralRatioBIPS: number | BN | string,
      _ccbMinCollateralRatioBIPS: number | BN | string,
      _safetyMinCollateralRatioBIPS: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _class: number | BN | string,
      _token: string,
      _minCollateralRatioBIPS: number | BN | string,
      _ccbMinCollateralRatioBIPS: number | BN | string,
      _safetyMinCollateralRatioBIPS: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setCollateralReservationFeeBips: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setConfirmationByOthersAfterSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setConfirmationByOthersRewardUSD5: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setEmergencyPauseDurationResetAfterSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setFdcVerification: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setLiquidationPaymentFactors: {
    (
      _assetManagers: string[],
      _paymentFactors: (number | BN | string)[],
      _vaultCollateralFactors: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _paymentFactors: (number | BN | string)[],
      _vaultCollateralFactors: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _paymentFactors: (number | BN | string)[],
      _vaultCollateralFactors: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _paymentFactors: (number | BN | string)[],
      _vaultCollateralFactors: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setLiquidationStepSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setLotSizeAmg: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setMaxEmergencyPauseDurationSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setMaxRedeemedTickets: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setMaxTrustedPriceAgeSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setMinUnderlyingBackingBips: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setMinUpdateRepeatTimeSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setMintingCapAmg: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setMintingPoolHoldingsRequiredBIPS: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setPaymentChallengeReward: {
    (
      _assetManagers: string[],
      _rewardVaultCollateralWei: number | BN | string,
      _rewardBIPS: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _rewardVaultCollateralWei: number | BN | string,
      _rewardBIPS: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _rewardVaultCollateralWei: number | BN | string,
      _rewardBIPS: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _rewardVaultCollateralWei: number | BN | string,
      _rewardBIPS: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setPoolExitAndTopupChangeTimelockSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setPriceReader: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRedemptionDefaultFactorBips: {
    (
      _assetManagers: string[],
      _vaultF: number | BN | string,
      _poolF: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _vaultF: number | BN | string,
      _poolF: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _vaultF: number | BN | string,
      _poolF: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _vaultF: number | BN | string,
      _poolF: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRedemptionFeeBips: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRedemptionPaymentExtensionSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRejectOrCancelCollateralReservationReturnFactorBIPS: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRejectRedemptionRequestWindowSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setRejectedRedemptionDefaultFactorBips: {
    (
      _assetManagers: string[],
      _vaultF: number | BN | string,
      _poolF: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _vaultF: number | BN | string,
      _poolF: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _vaultF: number | BN | string,
      _poolF: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _vaultF: number | BN | string,
      _poolF: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setTakeOverRedemptionRequestWindowSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setTimeForPayment: {
    (
      _assetManagers: string[],
      _underlyingBlocks: number | BN | string,
      _underlyingSeconds: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _underlyingBlocks: number | BN | string,
      _underlyingSeconds: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _underlyingBlocks: number | BN | string,
      _underlyingSeconds: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _underlyingBlocks: number | BN | string,
      _underlyingSeconds: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setTokenInvalidationTimeMinSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setTransferFeeMillionths: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      _scheduledAt: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      _scheduledAt: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      _scheduledAt: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      _scheduledAt: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setVaultCollateralBuyForFlareFactorBIPS: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setWhitelist: {
    (
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  setWithdrawalOrDestroyWaitMinSeconds: {
    (
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _value: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  supportsInterface(
    _interfaceId: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  switchToProductionMode: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  terminate: {
    (_assetManagers: string[], txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  unpauseMinting: {
    (_assetManagers: string[], txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  updateContractAddresses: {
    (
      _contractNameHashes: string[],
      _contractAddresses: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _contractNameHashes: string[],
      _contractAddresses: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _contractNameHashes: string[],
      _contractAddresses: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _contractNameHashes: string[],
      _contractAddresses: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  updateContracts: {
    (_assetManagers: string[], txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  upgradeAgentVaultsAndPools: {
    (
      _assetManagers: string[],
      _start: number | BN | string,
      _end: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _start: number | BN | string,
      _end: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _start: number | BN | string,
      _end: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _start: number | BN | string,
      _end: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  upgradeFAssetImplementation: {
    (
      _assetManagers: string[],
      _implementation: string,
      _callData: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _assetManagers: string[],
      _implementation: string,
      _callData: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _assetManagers: string[],
      _implementation: string,
      _callData: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _assetManagers: string[],
      _implementation: string,
      _callData: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  upgradeTo: {
    (
      newImplementation: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      newImplementation: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      newImplementation: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      newImplementation: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  upgradeToAndCall: {
    (
      newImplementation: string,
      data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      newImplementation: string,
      data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      newImplementation: string,
      data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      newImplementation: string,
      data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  methods: {
    addAssetManager: {
      (_assetManager: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _assetManager: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManager: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManager: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    addCollateralType: {
      (
        _assetManagers: string[],
        _data: {
          collateralClass: number | BN | string;
          token: string;
          decimals: number | BN | string;
          validUntil: number | BN | string;
          directPricePair: boolean;
          assetFtsoSymbol: string;
          tokenFtsoSymbol: string;
          minCollateralRatioBIPS: number | BN | string;
          ccbMinCollateralRatioBIPS: number | BN | string;
          safetyMinCollateralRatioBIPS: number | BN | string;
        },
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _data: {
          collateralClass: number | BN | string;
          token: string;
          decimals: number | BN | string;
          validUntil: number | BN | string;
          directPricePair: boolean;
          assetFtsoSymbol: string;
          tokenFtsoSymbol: string;
          minCollateralRatioBIPS: number | BN | string;
          ccbMinCollateralRatioBIPS: number | BN | string;
          safetyMinCollateralRatioBIPS: number | BN | string;
        },
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _data: {
          collateralClass: number | BN | string;
          token: string;
          decimals: number | BN | string;
          validUntil: number | BN | string;
          directPricePair: boolean;
          assetFtsoSymbol: string;
          tokenFtsoSymbol: string;
          minCollateralRatioBIPS: number | BN | string;
          ccbMinCollateralRatioBIPS: number | BN | string;
          safetyMinCollateralRatioBIPS: number | BN | string;
        },
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _data: {
          collateralClass: number | BN | string;
          token: string;
          decimals: number | BN | string;
          validUntil: number | BN | string;
          directPricePair: boolean;
          assetFtsoSymbol: string;
          tokenFtsoSymbol: string;
          minCollateralRatioBIPS: number | BN | string;
          ccbMinCollateralRatioBIPS: number | BN | string;
          safetyMinCollateralRatioBIPS: number | BN | string;
        },
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    addEmergencyPauseSender: {
      (_address: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _address: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _address: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _address: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    assetManagerExists(
      _assetManager: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    cancelGovernanceCall: {
      (_encodedCall: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _encodedCall: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _encodedCall: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _encodedCall: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    deprecateCollateralType: {
      (
        _assetManagers: string[],
        _class: number | BN | string,
        _token: string,
        _invalidationTimeSec: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _class: number | BN | string,
        _token: string,
        _invalidationTimeSec: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _class: number | BN | string,
        _token: string,
        _invalidationTimeSec: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _class: number | BN | string,
        _token: string,
        _invalidationTimeSec: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    emergencyPause: {
      (
        _assetManagers: string[],
        _duration: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _duration: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _duration: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _duration: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    emergencyPauseTransfers: {
      (
        _assetManagers: string[],
        _duration: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _duration: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _duration: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _duration: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    executeGovernanceCall: {
      (_encodedCall: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _encodedCall: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _encodedCall: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _encodedCall: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    getAddressUpdater(txDetails?: Truffle.TransactionDetails): Promise<string>;

    getAssetManagers(txDetails?: Truffle.TransactionDetails): Promise<string[]>;

    governance(txDetails?: Truffle.TransactionDetails): Promise<string>;

    governanceSettings(txDetails?: Truffle.TransactionDetails): Promise<string>;

    initialize: {
      (
        _governanceSettings: string,
        _initialGovernance: string,
        _addressUpdater: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _governanceSettings: string,
        _initialGovernance: string,
        _addressUpdater: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _governanceSettings: string,
        _initialGovernance: string,
        _addressUpdater: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _governanceSettings: string,
        _initialGovernance: string,
        _addressUpdater: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    isExecutor(
      _address: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    pauseMinting: {
      (
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    productionMode(txDetails?: Truffle.TransactionDetails): Promise<boolean>;

    proxiableUUID(txDetails?: Truffle.TransactionDetails): Promise<string>;

    removeAssetManager: {
      (_assetManager: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _assetManager: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManager: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManager: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    removeEmergencyPauseSender: {
      (_address: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _address: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _address: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _address: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    replacedBy(txDetails?: Truffle.TransactionDetails): Promise<string>;

    resetEmergencyPauseTotalDuration: {
      (
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAgentExitAvailableTimelockSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAgentFeeChangeTimelockSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAgentMintingCRChangeTimelockSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAgentOwnerRegistry: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAgentTimelockedOperationWindowSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAgentVaultFactory: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAnnouncedUnderlyingConfirmationMinSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAttestationWindowSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setAverageBlockTimeMS: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCancelCollateralReservationAfterSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCcbTimeSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCleanerContract: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCleanupBlockNumberManager: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCollateralPoolFactory: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCollateralPoolTokenFactory: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCollateralPoolTokenTimelockSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCollateralRatiosForToken: {
      (
        _assetManagers: string[],
        _class: number | BN | string,
        _token: string,
        _minCollateralRatioBIPS: number | BN | string,
        _ccbMinCollateralRatioBIPS: number | BN | string,
        _safetyMinCollateralRatioBIPS: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _class: number | BN | string,
        _token: string,
        _minCollateralRatioBIPS: number | BN | string,
        _ccbMinCollateralRatioBIPS: number | BN | string,
        _safetyMinCollateralRatioBIPS: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _class: number | BN | string,
        _token: string,
        _minCollateralRatioBIPS: number | BN | string,
        _ccbMinCollateralRatioBIPS: number | BN | string,
        _safetyMinCollateralRatioBIPS: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _class: number | BN | string,
        _token: string,
        _minCollateralRatioBIPS: number | BN | string,
        _ccbMinCollateralRatioBIPS: number | BN | string,
        _safetyMinCollateralRatioBIPS: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setCollateralReservationFeeBips: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setConfirmationByOthersAfterSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setConfirmationByOthersRewardUSD5: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setEmergencyPauseDurationResetAfterSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setFdcVerification: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setLiquidationPaymentFactors: {
      (
        _assetManagers: string[],
        _paymentFactors: (number | BN | string)[],
        _vaultCollateralFactors: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _paymentFactors: (number | BN | string)[],
        _vaultCollateralFactors: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _paymentFactors: (number | BN | string)[],
        _vaultCollateralFactors: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _paymentFactors: (number | BN | string)[],
        _vaultCollateralFactors: (number | BN | string)[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setLiquidationStepSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setLotSizeAmg: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setMaxEmergencyPauseDurationSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setMaxRedeemedTickets: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setMaxTrustedPriceAgeSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setMinUnderlyingBackingBips: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setMinUpdateRepeatTimeSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setMintingCapAmg: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setMintingPoolHoldingsRequiredBIPS: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setPaymentChallengeReward: {
      (
        _assetManagers: string[],
        _rewardVaultCollateralWei: number | BN | string,
        _rewardBIPS: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _rewardVaultCollateralWei: number | BN | string,
        _rewardBIPS: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _rewardVaultCollateralWei: number | BN | string,
        _rewardBIPS: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _rewardVaultCollateralWei: number | BN | string,
        _rewardBIPS: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setPoolExitAndTopupChangeTimelockSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setPriceReader: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRedemptionDefaultFactorBips: {
      (
        _assetManagers: string[],
        _vaultF: number | BN | string,
        _poolF: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _vaultF: number | BN | string,
        _poolF: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _vaultF: number | BN | string,
        _poolF: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _vaultF: number | BN | string,
        _poolF: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRedemptionFeeBips: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRedemptionPaymentExtensionSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRejectOrCancelCollateralReservationReturnFactorBIPS: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRejectRedemptionRequestWindowSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setRejectedRedemptionDefaultFactorBips: {
      (
        _assetManagers: string[],
        _vaultF: number | BN | string,
        _poolF: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _vaultF: number | BN | string,
        _poolF: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _vaultF: number | BN | string,
        _poolF: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _vaultF: number | BN | string,
        _poolF: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setTakeOverRedemptionRequestWindowSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setTimeForPayment: {
      (
        _assetManagers: string[],
        _underlyingBlocks: number | BN | string,
        _underlyingSeconds: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _underlyingBlocks: number | BN | string,
        _underlyingSeconds: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _underlyingBlocks: number | BN | string,
        _underlyingSeconds: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _underlyingBlocks: number | BN | string,
        _underlyingSeconds: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setTokenInvalidationTimeMinSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setTransferFeeMillionths: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        _scheduledAt: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        _scheduledAt: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        _scheduledAt: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        _scheduledAt: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setVaultCollateralBuyForFlareFactorBIPS: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setWhitelist: {
      (
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    setWithdrawalOrDestroyWaitMinSeconds: {
      (
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _value: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    supportsInterface(
      _interfaceId: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    switchToProductionMode: {
      (txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(txDetails?: Truffle.TransactionDetails): Promise<void>;
      sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
      estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
    };

    terminate: {
      (
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    unpauseMinting: {
      (
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    updateContractAddresses: {
      (
        _contractNameHashes: string[],
        _contractAddresses: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _contractNameHashes: string[],
        _contractAddresses: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _contractNameHashes: string[],
        _contractAddresses: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _contractNameHashes: string[],
        _contractAddresses: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    updateContracts: {
      (
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    upgradeAgentVaultsAndPools: {
      (
        _assetManagers: string[],
        _start: number | BN | string,
        _end: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _start: number | BN | string,
        _end: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _start: number | BN | string,
        _end: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _start: number | BN | string,
        _end: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    upgradeFAssetImplementation: {
      (
        _assetManagers: string[],
        _implementation: string,
        _callData: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _assetManagers: string[],
        _implementation: string,
        _callData: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _assetManagers: string[],
        _implementation: string,
        _callData: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _assetManagers: string[],
        _implementation: string,
        _callData: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    upgradeTo: {
      (
        newImplementation: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        newImplementation: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        newImplementation: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        newImplementation: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    upgradeToAndCall: {
      (
        newImplementation: string,
        data: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        newImplementation: string,
        data: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        newImplementation: string,
        data: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        newImplementation: string,
        data: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
