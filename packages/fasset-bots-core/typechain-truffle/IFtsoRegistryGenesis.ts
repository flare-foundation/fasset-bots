/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Truffle } from "./types";

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IFtsoRegistryGenesisContract
  extends Truffle.Contract<IFtsoRegistryGenesisInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<IFtsoRegistryGenesisInstance>;
}

export type AllEvents = never;

export interface IFtsoRegistryGenesisInstance extends Truffle.ContractInstance {
  getFtsos(
    _indices: (number | BN | string)[],
    txDetails?: Truffle.TransactionDetails
  ): Promise<string[]>;

  methods: {
    getFtsos(
      _indices: (number | BN | string)[],
      txDetails?: Truffle.TransactionDetails
    ): Promise<string[]>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
